openapi: 3.1.0
info:
  title: Task Manager API
  description: |
    Task Manager API is a RESTful service built with Spring Boot that provides endpoints to manage tasks efficiently. 
    It allows clients to create, retrieve, update, and delete tasks, supporting a simple workflow for task tracking.

    Each task contains:
    - A unique identifier (UUID) [Autogenerated]
    - Title (required)
    - Description (optional)
    - Due date (ISO 8601 format, optional)
    - Status (PENDING, IN_PROGRESS, COMPLETED)
    
  termsOfService: https://swagger.io/terms/
  contact:
    email: denisse.cruzg57@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.12
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /tasks:
    get:
      tags:
        - tasks
      summary: Get all tasks
      responses:
        '200':
          description: (OK) List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      tags:
        - tasks
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
      responses:
        '200':
          description: (OK) Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{id}:
    get:
      tags:
        - tasks
      summary: Get a task by ID
      parameters:
        - $ref: '#/components/parameters/TaskId'
      responses:
        '200':
          description: (OK) Task found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
    put:
      tags:
        - tasks
      summary: Update a task status
      parameters:
        - $ref: '#/components/parameters/TaskId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: (OK) Task updated successfully
    delete:
      tags:
        - tasks
      summary: Delete a task by ID
      parameters:
        - $ref: '#/components/parameters/TaskId'
      responses:
        '200':
          description: (OK) Task deleted successfully

components:
  parameters:
    TaskId:
      name: id
      in: path
      required: true
      description: Unique identifier of the task
      schema:
        type: string
        format: uuid
        example: "123e4567-e89b-12d3-a456-426614174000"

  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          example: "Finish the project"
        description:
          type: string
          example: "Complete the API and prepare documentation"
        dueDate:
          type: string
          format: date-time
          example: "2025-09-01T12:00:00Z"
        status:
          $ref: '#/components/schemas/TaskStatus'
      required:
        - id
        - title
        - status

    TaskCreate:
      type: object
      properties:
        title:
          type: string
          example: "Finish the project"
        description:
          type: string
          example: "Complete the API and prepare documentation"
        dueDate:
          type: string
          format: date-time
          example: "2025-09-01T12:00:00Z"
        status:
          $ref: '#/components/schemas/TaskStatus'
      required:
        - title
        - status

    TaskStatus:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - COMPLETED
      example: PENDING